[runtime]
sampler = test
root = /home/naren/cosmosis

[test]
save_dir=parameters
fatal_errors=T

[pipeline]
; the main pipeline. It's a sequence of modules to run.
modules = consistency camb halofit extrapolate_power load_nz pk_to_cl

; the steps are:
; 1) consistency: calculate the simply derived cosmological parameters (e.g. omega_c = omega_m-omega_b)
; 2) camb: run the Boltzmann code to get the matter power spectrum
; 3) halofit: get the nonlinear matter power spectrum
; 4) extrapolate_power: extend the power spectra to high k
; 5) load_nz: get the photometric n(z) for LSST
; 6) pk_to_cl: convert the 3D spectra into 2D tomographic C_ell with the Limber approximation

; initial parameter values and their ranges and priors
values = values.dat

; If you want to combine with additional likelihoods such as Planck;
; then you will need to add them here, e.g.  likelihoods = xipm planck euclid lsst
likelihoods =

; extra (derived) parameter to save
extra_output =

;Control of extra info printed out
quiet=F
timing=T
debug=T

;***********************************
;Theory
;***********************************

[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py


[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2500
feedback=0


[halofit]
file = cosmosis-standard-library/boltzmann/halofit_takahashi/halofit_interface.so


[extrapolate_power]
file=cosmosis-standard-library/boltzmann/extrapolate/extrapolate_power.py
kmax=500.0


;***********************************
; Choice of photometric redshift
;***********************************

[load_nz]
file = cosmosis-standard-library/number_density/load_nz/load_nz.py
output_section = nz_source
filepath = tomo_source.dat


;***********************************
; Calculate shear C_ells
;***********************************


[pk_to_cl]
file = cosmosis-standard-library/structure/projection/project_2d.py
ell_min = 2.0
ell_max = 1000.0
n_ell = 400
shear-shear = source-source
verbose = T
get_kernel_peaks=F
